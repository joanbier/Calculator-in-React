{"version":3,"sources":["Components/Screen.js","Components/Button.js","Components/ClearButton.js","App.js","index.js"],"names":["Screen","props","className","value","Button","onClick","handleClick","children","isNaN","ClearButton","handleClear","App","state","result","addToScreen","lastValue","length","setState","handleEqual","math","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAKeA,MAHf,SAAgBC,GACd,OAAO,qBAAKC,UAAU,SAAf,SAAyBD,EAAME,SCUzBC,MAXf,SAAgBH,GACd,OACE,qBACEI,QAAS,kBAAMJ,EAAMK,YAAYL,EAAMM,WACvCL,UAAS,UAAKM,MAAMP,EAAMM,UAAY,WAAa,cAFrD,SAIGN,EAAMM,YCEEE,MARf,SAAqBR,GACnB,OACE,qBAAKI,QAASJ,EAAMS,YAAaR,UAAU,qBAA3C,iB,QC8DWS,E,4MA1DbC,MAAQ,CACNC,OAAQ,I,EAGVC,YAAc,SAAAX,GACZ,IAAMY,EAAY,EAAKH,MAAMC,OAAO,EAAKD,MAAMC,OAAOG,OAAS,GAC9B,KAA7B,EAAKJ,MAAMC,OAAOG,SAGR,MAAVb,GAA+B,MAAdY,GAIrB,EAAKE,SAAS,CACZJ,OAAQ,EAAKD,MAAMC,OAASV,M,EAIhCe,YAAc,WAEY,KAAtB,EAAKN,MAAMC,QACyC,MAApD,EAAKD,MAAMC,OAAO,EAAKD,MAAMC,OAAOG,OAAS,IAI/C,EAAKC,SAAS,CACZJ,OAAQM,IAAc,EAAKP,MAAMC,W,4CAIrC,WAAU,IAAD,OACP,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAOiB,KAAKR,MAAMC,SAC1B,sBAAKX,UAAU,QAAf,UACE,cAAC,EAAD,CAAQI,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAaJ,YAAa,kBAAM,EAAKO,SAAS,CAAEJ,OAAQ,QACxD,cAAC,EAAD,CAAQP,YAAac,KAAKN,YAA1B,eACA,cAAC,EAAD,CAAQR,YAAac,KAAKF,YAA1B,yB,GApDQG,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.612e86f6.chunk.js","sourcesContent":["import \"./Calculator.css\";\n\nfunction Screen(props) {\n  return <div className=\"screen\">{props.value}</div>;\n}\nexport default Screen;\n","import \"./Calculator.css\";\n\nfunction Button(props) {\n  return (\n    <div\n      onClick={() => props.handleClick(props.children)}\n      className={`${isNaN(props.children) ? \"operator\" : \"btn-number\"}`}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Button;\n","import \"./Calculator.css\";\n\nfunction ClearButton(props) {\n  return (\n    <div onClick={props.handleClear} className=\"clear-btn operator\">\n      AC\n    </div>\n  );\n}\n\nexport default ClearButton;\n","import React, { Component } from \"react\";\nimport \"./Components/Calculator.css\";\nimport Screen from \"./Components/Screen\";\nimport Button from \"./Components/Button\";\nimport ClearButton from \"./Components/ClearButton\";\nimport * as math from \"mathjs\";\n\nclass App extends Component {\n  state = {\n    result: \"\"\n  };\n\n  addToScreen = value => {\n    const lastValue = this.state.result[this.state.result.length - 1];\n    if (this.state.result.length === 20) {\n      return;\n    }\n    if (value === \".\" && lastValue === \".\") {\n      return;\n    }\n\n    this.setState({\n      result: this.state.result + value\n    });\n  };\n\n  handleEqual = () => {\n    if (\n      this.state.result === \"\" ||\n      this.state.result[this.state.result.length - 1] === \".\"\n    ) {\n      return;\n    }\n    this.setState({\n      result: math.evaluate(this.state.result)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Screen value={this.state.result}></Screen>\n        <div className=\"panel\">\n          <Button handleClick={this.addToScreen}>7</Button>\n          <Button handleClick={this.addToScreen}>8</Button>\n          <Button handleClick={this.addToScreen}>9</Button>\n          <Button handleClick={this.addToScreen}>+</Button>\n          <Button handleClick={this.addToScreen}>4</Button>\n          <Button handleClick={this.addToScreen}>5</Button>\n          <Button handleClick={this.addToScreen}>6</Button>\n          <Button handleClick={this.addToScreen}>-</Button>\n          <Button handleClick={this.addToScreen}>1</Button>\n          <Button handleClick={this.addToScreen}>2</Button>\n          <Button handleClick={this.addToScreen}>3</Button>\n          <Button handleClick={this.addToScreen}>/</Button>\n          <Button handleClick={this.addToScreen}>.</Button>\n          <Button handleClick={this.addToScreen}>0</Button>\n          <ClearButton handleClear={() => this.setState({ result: \"\" })} />\n          <Button handleClick={this.addToScreen}>*</Button>\n          <Button handleClick={this.handleEqual}>=</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}